---
import { Debug } from "astro/components";
import { DEFAULT_STATE } from "@/app.config.mjs";
import Layout from "@/layouts/Layout.astro";
import { StateSelector } from "@/components/state";
import { localizePath } from "astro-i18next";

export type Props = {
  name: string;
  gigs: any[];
  states: any[];
};

type State = {
  code: string;
  name: string;
  path: string;
  gigs: any[];
};

export async function getStaticPaths() {
  const states: State[] = (await Astro.glob("../data/gigs/*.json")).map(
    (state) =>
      ({
        ...state,
        path: localizePath(state.code),
      } as State)
  );

  const defaultState = states.find((state) => state.code === DEFAULT_STATE);

  return [
    {
      params: { state: undefined },
      props: { states, ...defaultState },
    },
    ...states.map(({ code, name, gigs }) => ({
      params: { state: code },
      props: { states, name, gigs },
    })),
  ];
}

const { states, name, gigs } = Astro.props;
const state = (Astro.params.state as string) ?? DEFAULT_STATE;
---

<Layout title={name}>
  <StateSelector client:idle states={states} selectedState={state} />
  <Debug {gigs} />
</Layout>
