---
import { Debug } from "astro/components";
import {
  SUPPORTED_LANGUAGES,
  DEFAULT_LOCALE,
  DEFAULT_STATE,
} from "@/app.config.mjs";
import Layout from "@/layouts/Layout.astro";

export type Props = {
  states: any[];
};

type StaticPath = {
  props: Props;
  params: {
    state?: string;
    lang: string;
  };
};

export async function getStaticPaths() {
  const states = await Astro.glob("../../data/gigs/*.json");

  return SUPPORTED_LANGUAGES.reduce((paths: StaticPath[], lang: string) => {
    // Don't add default locale paths.
    if (lang === DEFAULT_LOCALE) {
      return paths;
    }

    paths.push({
      params: {
        state: undefined,
        lang: lang.toLocaleLowerCase(),
      },
      props: { states } as Props,
    });

    paths.push(
      ...states.map(({ code }) => ({
        params: {
          lang,
          state: code,
        },
        props: { states },
      }))
    );

    return paths;
  }, [] as StaticPath[]);
}

const { states } = Astro.props;
const stateCode = (Astro.params.state as string) ?? DEFAULT_STATE;
const selectedState = states.find((state) => state.code === stateCode);
---

<Layout
  title={selectedState.name}
  states={states}
  selectedState={selectedState}
>
  <Debug {selectedState.gigs} />
</Layout>
